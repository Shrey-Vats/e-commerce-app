// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                   String       @id @default(auto()) @map("_id") @db.ObjectId
  name                 String?
  email                String       @unique
  password             String?
  image                String?
  roles                Role[]       @default([USER])
  status               UserStatus   @default(ACTIVE)
  addresses            Address[]
  // carts                Cart[]
  // orders               Orders[]
  // wishlists            Wishlist?
  // reviews              Review[]
  provider             AuthProvider @default(CREDENTIALS)
  isVerified           Boolean      @default(false)
  verifyToken          String?      
  verifyTokenExpiresAt DateTime?
  resetToken           String?  
  resetTokenExpiresAt  DateTime?
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  DELETED
}

enum AuthProvider {
  CREDENTIALS
  GOOGLE
  GITHUB
}

enum Role {
  USER
  ADMIN
  SELLER
}

model Address {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  userId    String  @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  label     String
  name      String
  phone     String
  line1     String
  line2     String?
  city      String
  state     String
  country   String
  zip       String
  isDefault Boolean @default(false)
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  slug      String   @unique
  parentId  String?  @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  slug String @unique
}

model Product {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  slug          String    @unique
  description   String
  images        String[]
  categoryId    String?  /* {/* @db.ObjectId */
  brandId       String?   /* @db.ObjectId */
  price         Float      @default(0)
  currency      String     @default("INR")
  // varients      Varient[]
  attributes    Json?
  status        ProductStatus @default(PUBLISHED)
  avgRating     Float?       @default(0)
  reviewCount   Int?      @default(0)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

enum ProductStatus {
  PUBLISHED
  DRAFT
  ARCHIVED
}
